using Application.Helpers;
using Application.Services.Contracts;
using Domain.Entities.Contracts;
using Domain.Entities.Models;

namespace Application.Services
{
    public class RecommendationService(IProgramRepository programRepository, GeminiApiClient geminiClient) 
        : IRecommendationService
    {
        private readonly IProgramRepository _programRepository = programRepository;
        private readonly GeminiApiClient _geminiClient = geminiClient;

        public async Task<RecommendationResponse> GetRecommendationsAsync(StudentProfile student)
        {
            var programs = await _programRepository.GetAllProgramsAsync();

            var prompt = PromptBuilder.BuildPrompt(student, programs);

            var content = await _geminiClient.GenerateContentAsync(prompt);

            if (!LlmResponseParser.TryParseRecommendations(content, out var recommendations))
            {
                recommendations = [
                    new() { ProgramName = "Generated by LLM-Advisor", Reason = content }
                ];
            }

            return new RecommendationResponse { Recommendations = recommendations };
        }
    }
}
